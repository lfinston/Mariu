%% e.mf

%% * (1) Copyright and License.

%%%% This file is part of the source code for Mariu, a calligraphic font, programmed in METAFONT.
%%%% Copyright (C) 2022 Laurence D. Finston

%%%% Mariu is free software; you can redistribute it and/or modify 
%%%% it under the terms of the GNU General Public License as published by 
%%%% the Free Software Foundation; either version 3 of the License, or 
%%%% (at your option) any later version.  

%%%% Mariu is distributed in the hope that it will be useful, 
%%%% but WITHOUT ANY WARRANTY; without even the implied warranty of 
%%%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
%%%% GNU General Public License for more details.  

%%%% You should have received a copy of the GNU General Public License 
%%%% along with Mariu; if not, write to the Free Software 
%%%% Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA 

%%%% Please send bug reports to Laurence.Finston@gmx.de

%%%% The author can be contacted at: 

%%%% Laurence D. Finston 
%%%% Laurence.Finston@gmx.de


% This is e.mf 
% Revised 28.9.96
%special "grayfont black";
beginchar("e",5.125pt#,6.5pt#,0); "The letter e";
clear_vars;
scaling_factor = 45/40;
nom_w = scaling_factor*3.8pt;
nom_h = scaling_factor*5.3pt;

do_fill:=true;
%do_fill:=false;

pickup my_fill_pen;

z0 = (16/64 nom_w, 26/64 nom_h);
z1 = (91/128 nom_w, 90/128 nom_h);
rt top z2r = (71/128 nom_w, nom_h);
z3 = (14/64 nom_w, 55/64 nom_h);
z4 = (15/64 nom_w, 14/64 nom_h);
bot z5l = (36/64 nom_w , -2/128 nom_h);
top rt z6r = (nom_w, 21/64 nom_h);


pos0(nib,42.5); pos1(nib,42.5); pos2(nib,42.5); pos3(nib,42.5);
pos4(nib,50);
pos5(nib,62.5); pos6(nib,65);

convert_path.p0
(z0e--z1e--z2e..tension 3 and 1..z3e..tension 1.425..z4e..%
tension 1.1 and 1.3..z5e{dir 20}..z6e);

% The steps of p0:
%  0    1    2    3    4    5    6    7    8    9    10   11  12   13
% z0l..z1l..z2l..z3l..z4l..z5l..z6l--z6r..z5r..z4r..z3r..z2r..z1r..z0r--cycle;

if do_fill=true:
pickup my_fill_pen;
filldraw subpath(1,2) of p0.l -- reverse subpath(1,2) of p0.r -- cycle;
filldraw subpath(4,6) of p0.l -- reverse subpath(4,6) of p0.r -- cycle;

around_crossing_pt(p0,2,4,x_pt_factor);

my_pen(42.5); drawdot z3;
draw subpath(0,1) of p0.m;
fi;

%do_letter_shift := false;
if do_letter_shift = true:
do_rules := false;
letter_shift(v0,.4pt,0);
else:
input e_rules;
penlabels(range 0 thru 6);
fi;

endchar;

% Local Variables:
% auto-save-interval:0
% End:




